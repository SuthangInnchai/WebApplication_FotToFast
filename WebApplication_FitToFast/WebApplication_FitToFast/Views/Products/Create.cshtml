@model WebApplication_FitToFast.Models.Inventory

@{
    ViewBag.Title = "Create";
}

<body class="bg-stockManagr">

    <h2 class="login-font" style="margin-left:300px">Add New Product</h2>

    @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        <div class="form-horizontal" style="margin-left:250px; width:1000px">
            <hr />
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" >
                
                @Html.Label("Product type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @using WebApplication_FitToFast.Helpers
                    @Html.DropDownListFor(model => model.typeId, SelectListItemHelper.GetTypeIdList(), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.typeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Product name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Product detail", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pDetail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pDetail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Product price", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Product image", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="productImg" />
                    @Html.ValidationMessageFor(model => model.pImage, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.Label("Product texture", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="textureImg" />
                    @Html.ValidationMessageFor(model => model.pTexture, "", new { @class = "text-danger" })


                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.XS, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.XS, new { htmlAttributes = new { @class = "form-control" } })
                  
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.S, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.S, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.M, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.M, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.L, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.L, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.XL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.XL, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add" class="btn btn-default" />
                    | @Html.ActionLink("Back", "Index")
                </div>
            
            </div>
        </div>
    }

  

</body>
